# Каждая буква из алфавита имеет
# свой вес ci. Вес строки, которую ты можешь получить из s многократным обменом любых двух
# букв, вычисляется так: для каждой буквы алфавита посчитай максимальное расстояние между
# позициями, в которых стоит эта буква и перемножь его с весом этой буквы. Принеси мне строку
# максимально возможного веса, и я тебе расскажу, в чём смысл жизни»
#
# Формат входных данных
# Дана строка, состоящая из строчных букв латинского алфавита.
# Следующая строка ввода содержит 26 чисел — веса букв латинского алфавита от «a» до «z», веса неотрицательны
# и не превосходят 2^31 − 1.
#
# Формат выходных данных
# Выведите строку s, в которой переставлены буквы так, чтобы полученный вес был максимально
# возможным. Если искомых вариантов несколько, выведите любой из них.

from collections import Counter

string = input()
weights = dict(zip([chr(i) for i in range(ord('a'), ord('z'))], [int(i) for i in input().split()]))

counter = Counter(string)

duplicate_string, string = '',''
for letter, count in counter.items():
    if count > 1:
        duplicate_string += letter
        string += letter*(count-2)
    else: string += letter

sorting = sorted(duplicate_string, key=lambda x:weights[x], reverse=True)
print(''.join(sorting) + string + (''.join(sorting))[::-1])
